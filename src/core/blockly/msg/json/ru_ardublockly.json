{
	"@metadata": {
		"authors": []
	},
	"ARD_TYPE_CHAR": "Символ",
	"ARD_TYPE_TEXT": "Текст",
	"ARD_TYPE_BOOL": "Логическое",
	"ARD_TYPE_SHORT": "Маленькое Число",
	"ARD_TYPE_NUMBER": "Число",
	"ARD_TYPE_LONG": "Большое Число",
	"ARD_TYPE_DECIMAL": "Числовое",
	"ARD_TYPE_ARRAY": "Массив",
	"ARD_TYPE_NULL": "Null",
	"ARD_TYPE_UNDEF": "Неопределенное",
	"ARD_TYPE_CHILDBLOCKMISSING": "НетВложенногоБлока",
	"ARD_HIGH": "HIGH",
	"ARD_LOW": "LOW",
	"ARD_ANALOGREAD": "Считать аналоговый вход №",
	"ARD_ANALOGREAD_TIP": "Возвращает значение от 0 до 1024",
	"ARD_ANALOGWRITE": "Установить аналоговый выход №",
	"ARD_ANALOGWRITE_TIP": "Записать аналоговую величину (0 - 255) в указанный ШИМ порт",
	"ARD_HIGHLOW_TIP": "Установит значения HIGH или LOW для цифрового выхода.",
	"ARD_DIGITALREAD": "считать цифровой пин №",
	"ARD_DIGITALREAD_TIP": "Считает цифровое значение с пина: HIGH или LOW",
	"ARD_DIGITALWRITE": "Установить цифровой пин ",
	"ARD_WRITE_TO": "в",
	"ARD_DIGITALWRITE_TIP": "Установит на указанном пине цифровое значение HIGH или LOW",
	"ARD_BUILTIN_LED": "установить встроенный светодиод",
	"ARD_BUILTIN_LED_TIP": "Включает и выключает встроенный светодиод на Arduino",
	"ARD_DEFINE": "Определить",
	"ARD_TONE_PIN": "Частота PIN №",
	"ARD_TONE_FREQ": "частота",
	"ARD_TONE_PIN_TIP": "Генерирует звуковые частоты на пине",
	"ARD_NOTONE_PIN": "Вход/выход без поддержки генерации сигнала №",
	"ARD_NOTONE_PIN_TIP": "Остановит генерацию прямоугольного сигнала на выходе",
	"ARD_MAP": "Преобразовать значение",
	"ARD_MAP_VAL": "в диапазон [0-",
	"ARD_MAP_TIP": "Преобразовывает из диапазона [0-1024] в другой диапазон.",
	"ARD_FUN_RUN_SETUP": "Запускается один раз: setup()",
	"ARD_FUN_RUN_LOOP": "Бесконечный цикл: loop()",
	"ARD_FUN_RUN_TIP": "Определяет функции setup() и loop().",
	"ARD_PIN_WARN1": "Пин %1 нужен для %2 в качестве %3. Но уже использован для %4.",
	"ARD_SERIAL_SETUP": "Настройка",
	"ARD_SERIAL_SPEED": ":  скорость",
	"ARD_SERIAL_BPS": "бит/с",
	"ARD_SERIAL_SETUP_TIP": "Задает скорость последовательного порта",
	"ARD_SERIAL_PRINT": "вывести",
	"ARD_SERIAL_PRINT_NEWLINE": "добавить перенос строки",
	"ARD_SERIAL_PRINT_TIP": "Выводит данные в консоль/последовательный порт в читаемом ASCII виде.",
	"ARD_SERIAL_PRINT_WARN": "Блок настройки %1 должен быть добавлен для того чтобы использовать этот блок!",
	"ARD_SERVO_WRITE": "Установить угол сервопривода",
	"ARD_SERVO_WRITE_TO": "на",
	"ARD_SERVO_WRITE_DEG_180": " градусов",
	"ARD_SERVO_WRITE_TIP": "Повернуть сервопривод на определенный угол",
	"ARD_SERVO_READ": "Считать угол сервопривода №",
	"ARD_SERVO_READ_TIP": "Считывает значение угла поворота сервопривода",
	"ARD_SPI_SETUP": "Настройка интерфейса",
	"ARD_SPI_SETUP_CONF": ":",
	"ARD_SPI_SETUP_SHIFT": "сдвиг данных",
	"ARD_SPI_SETUP_MSBFIRST": "MSBFIRST",
	"ARD_SPI_SETUP_LSBFIRST": "LSBFIRST",
	"ARD_SPI_SETUP_DIVIDE": "делитель частоты",
	"ARD_SPI_SETUP_MODE": "Режим SPI  (полярность - фаза)",
	"ARD_SPI_SETUP_MODE0": "0 (Низкий - Задний фронт)",
	"ARD_SPI_SETUP_MODE1": "1 (Низкий - Передний фронт)",
	"ARD_SPI_SETUP_MODE2": "2 (Высокий - Задний фронт)",
	"ARD_SPI_SETUP_MODE3": "3 (Высокий - Передний фронт)",
	"ARD_SPI_SETUP_TIP": "Настраивает SPI.",
	"ARD_SPI_TRANS_NONE": "пусто",
	"ARD_SPI_TRANS_VAL": "передача",
	"ARD_SPI_TRANS_SLAVE": "к ведомому пину",
	"ARD_SPI_TRANS_TIP": "Отправляет сообщение SPI в ведомое устройство.",
	"ARD_SPI_TRANS_WARN1": "Для блока %1 должен быть добавлен блок настроек!",
	"ARD_SPI_TRANS_WARN2": "Старое значение пина %1 больше недоступно.",
	"ARD_SPI_TRANSRETURN_TIP": "Отправляет сообщение SPI в ведомое устройство и получает в ответ данные.",
	"ARD_STEPPER_SETUP": "Конфигурация",
	"ARD_STEPPER_MOTOR": "шагового мотора:",
	"ARD_STEPPER_DEFAULT_NAME": "MyStepper",
	"ARD_STEPPER_TWO_PINS": "2",
	"ARD_STEPPER_FOUR_PINS": "4",
	"ARD_STEPPER_PIN1": "пин1 №",
	"ARD_STEPPER_PIN2": "пин2 №",
	"ARD_STEPPER_PIN3": "пин3 №",
	"ARD_STEPPER_PIN4": "пин4 №",
	"ARD_STEPPER_REVOLVS": "количество шагов за оборот",
	"ARD_STEPPER_SPEED": "скорость, оборот/с",
	"ARD_STEPPER_SETUP_TIP": "Настраивает выходной пин шагового мотора и прочие свойства.",
	"ARD_STEPPER_STEP": "запустить шаговый",
	"ARD_STEPPER_STEPS": "шаг(ов)",
	"ARD_STEPPER_STEP_TIP": "Поворачивает шаговый мотор на указанное количество шагов.",
	"ARD_STEPPER_COMPONENT": "шаговый мотор",
	"ARD_COMPONENT_WARN1": "Блок настроек %1 с тем же именем %2 должен быть использован с этим блоком!",
	"ARD_TIME_DELAY": "ждать",
	"ARD_TIME_MS": "миллисекунд",
	"ARD_TIME_DELAY_TIP": "Ждет заданное количество миллисекунд",
	"ARD_TIME_DELAY_MICROS": "микросекунд",
	"ARD_TIME_DELAY_MICRO_TIP": "Ждет заданное количество микросекунд",
	"ARD_TIME_MILLIS": "прошло времени (в миллисекундах)",
	"ARD_TIME_MILLIS_TIP": "Возвращает количество миллисекунд прошедших с запуска Arduino в текущей программе. Значение должно храниться в большой переменной беззнакового типа",
	"ARD_TIME_MICROS": "прошло времени (в микросекундах)",
	"ARD_TIME_MICROS_TIP": "Возвращает сколько микросекуд прошло с запуска Arduino в текущей программе. Значение должно храниться в большой переменной беззнакового типа",
	"ARD_TIME_INF": "Ждать бесконечно (останавливает программу)",
	"ARD_TIME_INF_TIP": "Ждет неопределенное время, останавливая при этом программу.",
	"ARD_VAR_AS": "как",
	"ARD_VAR_AS_TIP": "Приводит значение к определенному типу",
	"ARD_PULSE_READ": "Считать %1 импульс на пине №%2",
	"ARD_PULSE_READ_TIMEOUT": "Считать %1 импульс на пине №%2 (с таймаутом %3)",
	"ARD_PULSE_TIP": "Измеряет длительность импульса на выбранном пине.",
	"ARD_PULSETIMEOUT_TIP": "Измеряет длительность импульса на выбранном пине, в течение таймаута.",
	"ARD_SETTONE": "Установить на пине №",
	"ARD_TONEFREQ": "частоту",
	"ARD_TONE_TIP": "Устанавливает частоту прямоугольных импульсов в диапазоне 31 - 65535 Гц",
	"ARD_TONE_WARNING": "Частота должна быть в диапазоне 31 - 65535 Гц",
	"ARD_NOTONE": "Отключить частоту на пине №",
	"ARD_NOTONE_TIP": "Останавливает генерацию прямоугольного сигнала на пине",
	"NEW_INSTANCE": "Новый экземпляр...",
	"RENAME_INSTANCE": "Переименовать экземпляры...",
	"NEW_INSTANCE_TITLE": "Название нового экземпляра:",
	"RENAME_INSTANCE_TITLE": "Переименовать все '%1' экземпляры в:"
}
